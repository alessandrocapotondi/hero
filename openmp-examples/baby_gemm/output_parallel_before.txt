Prepending HERCULES installation paths to your environment.
  New PATH            is /scratch/mmaxim/hero/install/bin:/home/mmaxim/.cargo/bin:/usr/lib64/qt-3.3/bin:/home/mmaxim/bin:/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin:/usr/local/condor/bin:/usr/sepp/bin:/home/mmaxim/bin:/usr/local/condor/bin:/usr/sepp/bin:/usr/sepp/bin
  New LIBRARY_PATH    is /scratch/mmaxim/hero/install/lib:/scratch/mmaxim/hero/install/lib/hercules:
  New LD_LIBRARY_PATH is /scratch/mmaxim/hero/install/lib:/scratch/mmaxim/hero/install/lib/hercules:
Configuring PULP SDK at: /scratch/mmaxim/hero/pulp/sdk/pkg/sdk/dev
rm -vf darknet __hmpp* baby_gemm *~ *.dis *.ll *.slm
rm -rvf .deps
removed â€˜.deps/main.dâ€™
removed directory: â€˜.depsâ€™
rm -vf __hmpp* baby_gemm *~ *.bc *.dis *.i *.lh *.lk *.ll *.o *.s *.slm
rm -rvf .deps
clang -c -emit-llvm -S -MT main.ll -MMD -MP -MF .deps/main.d --sysroot=/scratch/mmaxim/hero/install/aarch64-hero-linux-gnu/ -fopenmp -fintegrated-as -target aarch64-hero-linux-gnu  -fopenmp=libomp -O3 -static -fhero-device-default-as=device -fopenmp-targets=riscv32-hero-unknown-elf -I/scratch/mmaxim/hero/install/../openmp-examples/polybench-acc/common -I/scratch/mmaxim/cmux/inc -I/scratch/mmaxim/cmux/src -I/scratch/mmaxim/hero/openmp-examples/common -include hero_64.h main.c
main.c:44:9: warning: implicitly declaring library function 'fabs' with type 'double (double)' [-Wimplicit-function-declaration]
    if (fabs(C[i] - E[i]) > 0.00001) {
        ^
main.c:44:9: note: include the header <math.h> or explicitly provide a declaration for 'fabs'
[0;1;36mNOTICE: [0m[1mAnalyzing module "[0;1;35mmain.c[0m[1m" for target [0;1;35maarch64-hero-linux-gnu[0m[1m, using [0;1;35mHardware Caches[0m[1m for local storage
[0m[0;1;36mNOTICE: [0mOverriding default CPU memory size with 32768 bytes
  Replacing trip count 2768897 with [ IN, UPPER - 1 - start] 2768896
  Replacing trip count 2768897 with [ IN, UPPER - 1 - start] 2768896
Reduced IV   %indvars.iv217 = phi i64 [ %indvars.iv.next218, %for.cond.cleanup76 ], [ 0, %for.body57 ] to -99 trips
NOT SUCCESSFUL!
Reduced IV   %indvars.iv211 = phi i64 [ %indvars.iv.next212, %for.body77 ], [ 0, %for.body63 ] to -99 trips
Reduced IV   %indvars.iv221 = phi i64 [ %indvars.iv.next222, %for.cond.cleanup62 ], [ 0, %for.cond.cleanup31 ] to -99 trips
NOT SUCCESSFUL!
Reduced IV   %indvars.iv217 = phi i64 [ %indvars.iv.next218, %for.cond.cleanup76 ], [ 0, %for.body57 ] to -99 trips
Reduced IV   %indvars.iv211 = phi i64 [ %indvars.iv.next212, %for.body77 ], [ 0, %for.body63 ] to -99 trips
Overrule intervals: Checking for environment variable HERCULES_OVERRULE_INTERVALS_aarch64...Not defined
Overrule loops: Checking for environment variable HERCULES_OVERRULE_LOOPS_aarch64...Not defined
[0m[1mINTERVAL 1: [0m[0;1;31mCOMPATIBLE [0mfrom regions 0 (-g for line info)
      Reason  : [0m[1mcall to external function: malloc (-g for line info)
[0m
[0m[1mINTERVAL 3: [0m[0;1;31mCOMPATIBLE [0mfrom regions 2 3 4 (-g for line info)
      Reason  : [0m[1mcall to external function: malloc (-g for line info)
[0m      Reason  : [0m[1mcall to external function: malloc (-g for line info)
[0m      Reason  : [0m[1mcall to external function: malloc (-g for line info)
[0m
[0m[1mINTERVAL 4: [0m[0;1;32mPREDICTABLE [0m[1mLINEAR [0mfrom regions 12 13 14 (-g for line info)
  Memory use  : 1904 bytes
    [[0;1;35mItBf[0m] RANGE: arrayidx (call)  [ 0 : 16 ] [ 0 : 27 ] (SPM element size = 4)

[0m[1mINTERVAL 9: [0m[0;1;32mPREDICTABLE [0m[1mLINEAR [0mfrom regions 28 (-g for line info)
  Memory use  : 8 bytes
    [[0;1;35mItBf[0m] RANGE: arrayidx67 (call13)  [ 0 : 0 ] [ 0 : 0 ] (SPM element size = 4)
    [[0;1;35mItBf[0m] RANGE: arrayidx71 (call9)  [ 0 : 0 ] [ 0 : 0 ] (SPM element size = 4)

[0m[1mINTERVAL 10: [0m[0;1;32mPREDICTABLE [0m[1mLINEAR [0mfrom regions 31 32 (-g for line info)
  Memory use  : 224 bytes
    [[0;1;35mItBf[0m] RANGE: arrayidx81 (call)  [ 0 : 0 ] [ 0 : 0 ] [ 0 : 27 ] (SPM element size = 4)
    [[0;1;35mItBf[0m] RANGE: arrayidx85 (call5)  [ 0 : 0 ] [ 0 : 0 ] [ 0 : 27 ] (SPM element size = 4)

[0m[1mINTERVAL 13: [0m[0;1;31mCOMPATIBLE [0mfrom regions 39 (-g for line info)
      Reason  : [0m[1mcall to external function: gemm (-g for line info)
[0m
[0m[1mINTERVAL 14: [0m[0;1;32mPREDICTABLE [0m[1mLINEAR [0mfrom regions 41 (-g for line info)
  Memory use  : 8 bytes
    [[0;1;36mSCEV[0m] RANGE: call9 [ 0 : 0 ] (SPM element size = 4)
    [[0;1;36mSCEV[0m] RANGE: call13 [ 0 : 0 ] (SPM element size = 4)

[0m[1mINTERVAL 15: [0m[0;1;31mCOMPATIBLE [0mfrom regions 42 (-g for line info)
      Reason  : [0m[1mCall to blacklisted (HERCULES_FORCE_COMPATIBLE) function: llvm.fabs.f64 (-g for line info)
[0m
[0m[1mINTERVAL 19: [0m[0;1;31mCOMPATIBLE [0mfrom regions 57 (-g for line info)
      Reason  : [0m[1mDemoting interleaved Compatible and Predictable to single Compatible: Resulting Predictable interval is too small. Limit is 0 bytes, override with HERCULES_DISQ_THRESHOLD.
[0m                  call to external function: printf (-g for line info)
                  call to external function: printf (-g for line info)

[0m[1mINTERVAL 22: [0m[0;1;31mCOMPATIBLE [0mfrom regions 60 61 62 63 (-g for line info)
      Reason  : [0m[1mcall to external function: free (-g for line info)
[0m      Reason  : [0m[1mcall to external function: free (-g for line info)
[0m      Reason  : [0m[1mcall to external function: free (-g for line info)
[0m      Reason  : [0m[1mcall to external function: free (-g for line info)
[0m
Collecting instructions for intervals... [0%...20%...40%...60%...80%...DONE]
[0;1;33mWARNING: [0mNo min offset for baseArray:   %call = call noalias i8* @malloc(i64 1728) #6
UNHANDLED CASE: GEP DEPENDS ON MULTIPLE INDUCTION VARS!
     USED INDVAR: indvars.iv237
     USED INDVAR: indvars.iv233
[0;1;33mWARNING: [0mNo min offset for baseArray:   %call13 = call noalias i8* @malloc(i64 11075584) #6
UNHANDLED CASE: GEP DEPENDS ON MULTIPLE INDUCTION VARS!
     USED INDVAR: indvars.iv221
     USED INDVAR: indvars.iv217
[0;1;33mWARNING: [0mNo min offset for baseArray:   %call9 = call noalias i8* @malloc(i64 11075584) #6
UNHANDLED CASE: GEP DEPENDS ON MULTIPLE INDUCTION VARS!
     USED INDVAR: indvars.iv221
     USED INDVAR: indvars.iv217
[0;1;33mWARNING: [0mNo min offset for baseArray:   %call = call noalias i8* @malloc(i64 1728) #6
UNHANDLED CASE: GEP DEPENDS ON MULTIPLE INDUCTION VARS!
     USED INDVAR: indvars.iv221
     USED INDVAR: indvars.iv211
[0;1;33mWARNING: [0mNo min offset for baseArray:   %call5 = call noalias i8* @malloc(i64 18690048) #6
UNHANDLED CASE: GEP DEPENDS ON MULTIPLE INDUCTION VARS!
     USED INDVAR: indvars.iv211
     USED INDVAR: indvars.iv217
[0;1;34m[HERCULES] Footprint Analysis : [0m[1mmain.c (aarch64-hero-linux-gnu)[0m: Identified 10 interval(s) in 1 kernel(s).
[0;1;33mWARNING [0m[WarpSeparate.cpp:121] [0m[1mInserting COMPATIBLE PremNotify at entry "main" with major ID INT_MAX.
[0m[0;1;36mNOTICE: [0m[1mTransforming module "[0;1;35mmain.c[0m[1m" for target [0;1;35maarch64-hero-linux-gnu[0m[1m, using [0;1;35mHardware Caches[0m[1m for local storage
[0m  [[0;1;33mSAFE[0m] Interval 4 does not have unique IVs per dimension, which is not supported in the current implementation.
  [[0;1;33mSAFE[0m] Interval 10 does not have unique IVs per dimension, which is not supported in the current implementation.
  [[0;1;33mSAFE[0m] Interval 9 does not have unique IVs per dimension, which is not supported in the current implementation.
[0;1;36mNOTICE: [0mSoftDMA optimization is enabled.
  [[0;1;36mSCEV[0m] Interval 14 is Fully Analyzable, optimizing Load/Stores.
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_2
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_2
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_2
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_2
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_2
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_2
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_2
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_2
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
Removing metadata HRCLSPMIndVar_0
Removing metadata HRCLSPMIndVar_1
1 warning generated.
main.c:10:10: warning: initializing '__attribute__((address_space(1))) float *' with an expression of type 'float *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  float* A = (float*)malloc(M*K*sizeof(float));
         ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c:11:10: warning: initializing '__attribute__((address_space(1))) float *' with an expression of type 'float *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  float* B = (float*)malloc(K*N*sizeof(float));
         ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c:12:10: warning: initializing '__attribute__((address_space(1))) float *' with an expression of type 'float *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  float* C = (float*)malloc(M*N*sizeof(float));
         ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c:13:10: warning: initializing '__attribute__((address_space(1))) float *' with an expression of type 'float *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  float* E = (float*)malloc(M*N*sizeof(float));
         ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c:44:9: warning: implicitly declaring library function 'fabs' with type 'double (double)' [-Wimplicit-function-declaration]
    if (fabs(C[i] - E[i]) > 0.00001) {
        ^
main.c:44:9: note: include the header <math.h> or explicitly provide a declaration for 'fabs'
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;33mWARNING: [0m[1mFailed to find program entry point in module "main.c" (riscv32-hero-unknown-elf) -- [0;1;31mwill not be analyzed/transformed by HERCULES Passes[0m[1m. Please merge all source files into a single file to enable static analysis.
[0m[0;1;34m[HERCULES] ChannelArgInsertion: [0m[1mmain.c (riscv32-hero-unknown-elf)[0m: Didn't find any GPUguard calls, doing nothing.
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i32, i32, i32 } asm sideeffect "csrrci $2, 0x300, 3\0A\09sw $3, 0($4)\0A\09lw $0, 0($5)\0A\09lw $1, 4($4)\0A\09csrrw x0, 0x300, $2", "=&r,=r,=&r,r,r,r,2,~{memory}"(i32 %conv.i, i32* nonnull inttoptr (i32 270535672 to i32*), i32* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i32, i32, i32 } asm sideeffect "csrrci $2, 0x300, 3\0A\09sw $3, 0($4)\0A\09lw $0, 0($5)\0A\09lw $1, 4($4)\0A\09csrrw x0, 0x300, $2", "=&r,=r,=&r,r,r,r,2,~{memory}"(i32 %conv.i.i, i32* nonnull inttoptr (i32 270535672 to i32*), i32* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i32, i32 } asm sideeffect "csrrci $1, 0x300, 3\0A\09sw $2, 0($3)\0A\09sw $4, 0($5)\0A\09lw $0, 4($3)\0A\09csrrw x0, 0x300, $1", "=r,=&r,r,r,r,r,1,~{memory}"(i32 %conv.i, i32* nonnull inttoptr (i32 270535672 to i32*), i32 %val, i32* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i32, i32 } asm sideeffect "csrrci $1, 0x300, 3\0A\09sw $2, 0($3)\0A\09sw $4, 0($5)\0A\09lw $0, 4($3)\0A\09csrrw x0, 0x300, $1", "=r,=&r,r,r,r,r,1,~{memory}"(i32 %conv.i.i, i32* nonnull inttoptr (i32 270535672 to i32*), i32 %val, i32* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i16, i32, i32 } asm sideeffect "csrrci $2, 0x300, 3\0A\09sw $3, 0($4)\0A\09lhu $0, 0($5)\0A\09lw $1, 4($4)\0A\09csrrw x0, 0x300, $2", "=&r,=r,=&r,r,r,r,2,~{memory}"(i32 %conv.i, i32* nonnull inttoptr (i32 270535672 to i32*), i16* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i16, i32, i32 } asm sideeffect "csrrci $2, 0x300, 3\0A\09sw $3, 0($4)\0A\09lhu $0, 0($5)\0A\09lw $1, 4($4)\0A\09csrrw x0, 0x300, $2", "=&r,=r,=&r,r,r,r,2,~{memory}"(i32 %conv.i.i, i32* nonnull inttoptr (i32 270535672 to i32*), i16* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i32, i32 } asm sideeffect "csrrci $1, 0x300, 3\0A\09sw $2, 0($3)\0A\09sh $4, 0($5)\0A\09lw $0, 4($3)\0A\09csrrw x0, 0x300, $1", "=r,=&r,r,r,r,r,1,~{memory}"(i32 %conv.i, i32* nonnull inttoptr (i32 270535672 to i32*), i16 %val, i16* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i32, i32 } asm sideeffect "csrrci $1, 0x300, 3\0A\09sw $2, 0($3)\0A\09sh $4, 0($5)\0A\09lw $0, 4($3)\0A\09csrrw x0, 0x300, $1", "=r,=&r,r,r,r,r,1,~{memory}"(i32 %conv.i.i, i32* nonnull inttoptr (i32 270535672 to i32*), i16 %val, i16* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i8, i32, i32 } asm sideeffect "csrrci $2, 0x300, 3\0A\09sw $3, 0($4)\0A\09lbu $0, 0($5)\0A\09lw $1, 4($4)\0A\09csrrw x0, 0x300, $2", "=&r,=r,=&r,r,r,r,2,~{memory}"(i32 %conv.i, i32* nonnull inttoptr (i32 270535672 to i32*), i8* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i8, i32, i32 } asm sideeffect "csrrci $2, 0x300, 3\0A\09sw $3, 0($4)\0A\09lbu $0, 0($5)\0A\09lw $1, 4($4)\0A\09csrrw x0, 0x300, $2", "=&r,=r,=&r,r,r,r,2,~{memory}"(i32 %conv.i.i, i32* nonnull inttoptr (i32 270535672 to i32*), i8* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i32, i32 } asm sideeffect "csrrci $1, 0x300, 3\0A\09sw $2, 0($3)\0A\09sb $4, 0($5)\0A\09lw $0, 4($3)\0A\09csrrw x0, 0x300, $1", "=r,=&r,r,r,r,r,1,~{memory}"(i32 %conv.i, i32* nonnull inttoptr (i32 270535672 to i32*), i8 %val, i8* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i32, i32 } asm sideeffect "csrrci $1, 0x300, 3\0A\09sw $2, 0($3)\0A\09sb $4, 0($5)\0A\09lw $0, 4($3)\0A\09csrrw x0, 0x300, $1", "=r,=&r,r,r,r,r,1,~{memory}"(i32 %conv.i.i, i32* nonnull inttoptr (i32 270535672 to i32*), i8 %val, i8* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i32, i32, i32 } asm sideeffect "csrrci $2, 0x300, 3\0A\09sw $3, 0($4)\0A\09lw $0, 0($5)\0A\09lw $1, 4($4)\0A\09csrrw x0, 0x300, $2", "=&r,=r,=&r,r,r,r,2,~{memory}"(i32 %conv.i.i.i, i32* nonnull inttoptr (i32 270535672 to i32*), i32* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %3 = tail call { i32, i32, i32 } asm sideeffect "csrrci $2, 0x300, 3\0A\09sw $3, 0($4)\0A\09lw $0, 0($5)\0A\09lw $1, 4($4)\0A\09csrrw x0, 0x300, $2", "=&r,=r,=&r,r,r,r,2,~{memory}"(i32 %conv.i.i.i9, i32* nonnull inttoptr (i32 270535672 to i32*), i32* %2, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i32, i32 } asm sideeffect "csrrci $1, 0x300, 3\0A\09sw $2, 0($3)\0A\09sw $4, 0($5)\0A\09lw $0, 4($3)\0A\09csrrw x0, 0x300, $1", "=r,=&r,r,r,r,r,1,~{memory}"(i32 %conv.i.i.i, i32* nonnull inttoptr (i32 270535672 to i32*), i32 %conv, i32* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %3 = tail call { i32, i32 } asm sideeffect "csrrci $1, 0x300, 3\0A\09sw $2, 0($3)\0A\09sw $4, 0($5)\0A\09lw $0, 4($3)\0A\09csrrw x0, 0x300, $1", "=r,=&r,r,r,r,r,1,~{memory}"(i32 %conv.i.i.i7, i32* nonnull inttoptr (i32 270535672 to i32*), i32 %conv1, i32* %2, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %2 = tail call { i32, i32, i32 } asm sideeffect "csrrci $2, 0x300, 3\0A\09sw $3, 0($4)\0A\09lw $0, 0($5)\0A\09lw $1, 4($4)\0A\09csrrw x0, 0x300, $2", "=&r,=r,=&r,r,r,r,2,~{memory}"(i32 %conv.i.i, i32* nonnull inttoptr (i32 270535672 to i32*), i32* %1, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %4 = tail call { i32, i32, i32 } asm sideeffect "csrrci $2, 0x300, 3\0A\09sw $3, 0($4)\0A\09lw $0, 0($5)\0A\09lw $1, 4($4)\0A\09csrrw x0, 0x300, $2", "=&r,=r,=&r,r,r,r,2,~{memory}"(i32 %conv.i.i9, i32* nonnull inttoptr (i32 270535672 to i32*), i32* %3, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %1 = tail call { i32, i32 } asm sideeffect "csrrci $1, 0x300, 3\0A\09sw $2, 0($3)\0A\09sw $4, 0($5)\0A\09lw $0, 4($3)\0A\09csrrw x0, 0x300, $1", "=r,=&r,r,r,r,r,1,~{memory}"(i32 %conv.i.i, i32* nonnull inttoptr (i32 270535672 to i32*), i32 %conv, i32* %0, i32 undef) #2, !srcloc !2
[0;1;33mWARNING [0m[Utils.cpp:125] [0m[1mCall target is not a function
[0m  %3 = tail call { i32, i32 } asm sideeffect "csrrci $1, 0x300, 3\0A\09sw $2, 0($3)\0A\09sw $4, 0($5)\0A\09lw $0, 4($3)\0A\09csrrw x0, 0x300, $1", "=r,=&r,r,r,r,r,1,~{memory}"(i32 %conv.i.i10, i32* nonnull inttoptr (i32 270535672 to i32*), i32 %conv1, i32* %2, i32 undef) #2, !srcloc !2
5 warnings generated.
clang-offload-bundler -inputs=main.ll -outputs="main-host.ll,main-dev.ll" -type=ll -targets="host-aarch64-hero-linux-gnu,openmp-riscv32-hero-unknown-elf" -unbundle
hc-omp-pass main-host.ll OmpKernelWrapper "HERCULES-omp-kernel-wrapper" main-host.TMP.1.ll
cp main-host.TMP.1.ll main-host.OMP.ll
cp main-dev.ll main-dev.TMP.1.ll
hc-omp-pass main-dev.TMP.1.ll OmpKernelWrapper "HERCULES-omp-kernel-wrapper" main-dev.TMP.2.ll
hc-omp-pass main-dev.TMP.2.ll OmpHostPointerLegalizer "HERCULES-omp-host-pointer-legalizer" main-dev.TMP.3.ll
cp main-dev.TMP.3.ll main-dev.OMP.ll
clang-offload-bundler -inputs="main-host.OMP.ll,main-dev.OMP.ll" -outputs=main-out.ll -type=ll -targets="host-aarch64-hero-linux-gnu,openmp-riscv32-hero-unknown-elf"
clang -c -emit-llvm -S -MT gemm.ll -MMD -MP -MF .deps/gemm.d --sysroot=/scratch/mmaxim/hero/install/aarch64-hero-linux-gnu/ -fopenmp -fintegrated-as -target aarch64-hero-linux-gnu  -fopenmp=libomp -O3 -static -fhero-device-default-as=device -fopenmp-targets=riscv32-hero-unknown-elf -I/scratch/mmaxim/hero/install/../openmp-examples/polybench-acc/common -I/scratch/mmaxim/cmux/inc -I/scratch/mmaxim/cmux/src -I/scratch/mmaxim/hero/openmp-examples/common -include hero_64.h gemm.c
[0;1;36mPOINTER CAST: [0mCGOpenMPRuntime::getOrCreateDefaultLocation: @.str.4 = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
[0;1;33mWARNING: [0m[1mFailed to find program entry point in module "gemm.c" (aarch64-hero-linux-gnu) -- [0;1;31mwill not be analyzed/transformed by HERCULES Passes[0m[1m. Please merge all source files into a single file to enable static analysis.
[0m[0;1;33mWARNING [0m[Utils.cpp:136] [0m[1mNot handling arguments for kmpc_forks
[0m[0;1;33mWARNING [0m[Utils.cpp:136] [0m[1mNot handling arguments for kmpc_forks
[0m
; Function Attrs: norecurse nounwind
define internal void @.omp_outlined.(i32* noalias nocapture readonly %.global_tid., i32* noalias nocapture readnone %.bound_tid., i32* nocapture readonly dereferenceable(4) %M, i32* nocapture dereferenceable(4) %k, i32* nocapture readonly dereferenceable(4) %K, float* nocapture readonly dereferenceable(4) %ALPHA, float** nocapture readonly dereferenceable(8) %A, i32* nocapture readonly dereferenceable(4) %lda, i32* nocapture dereferenceable(4) %j, i32* nocapture readonly dereferenceable(4) %N, float** nocapture readonly dereferenceable(8) %C, i32* nocapture readonly dereferenceable(4) %ldc, float** nocapture readonly dereferenceable(8) %B, i32* nocapture readonly dereferenceable(4) %ldb) #8 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %0 = load i32, i32* %M, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %sub2 = add nsw i32 %0, -1
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %1 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #11
  store i32 0, i32* %.omp.lb, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %2 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #11
  store i32 %sub2, i32* %.omp.ub, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %3 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #11
  store i32 1, i32* %.omp.stride, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %4 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @0, i32 %5, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1) #11
  %6 = load i32, i32* %.omp.ub, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %cmp5 = icmp sgt i32 %6, %sub2
  %cond = select i1 %cmp5, i32 %sub2, i32 %6
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %7 = load i32, i32* %.omp.lb, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %8 = load float*, float** %A, align 8
  %9 = load float*, float** %B, align 8
  %10 = load float*, float** %C, align 8
  %cmp682 = icmp sgt i32 %7, %cond
  br i1 %cmp682, label %omp.loop.exit, label %for.cond.preheader

for.cond.preheader:                               ; preds = %omp.precond.then, %omp.inner.for.inc
  %.omp.iv.0.reg2mem74.083 = phi i32 [ %add28, %omp.inner.for.inc ], [ %7, %omp.precond.then ]
  store i32 0, i32* %k, align 4, !tbaa !13
  %11 = load i32, i32* %K, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %cmp880 = icmp sgt i32 %11, 0
  br i1 %cmp880, label %for.body, label %omp.inner.for.inc

for.body:                                         ; preds = %for.cond.preheader, %for.end
  %storemerge81 = phi i32 [ %inc26, %for.end ], [ 0, %for.cond.preheader ]
  %12 = load float, float* %ALPHA, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %13 = load i32, i32* %lda, align 4, !tbaa !13, !HRCLGlobalLoadStore !9, !HRCLIntermediateOnly !9
  %mul9 = mul nsw i32 %13, %.omp.iv.0.reg2mem74.083
  %add10 = add nsw i32 %mul9, %storemerge81
  %idxprom = sext i32 %add10 to i64
  %arrayidx = getelementptr inbounds float, float* %8, i64 %idxprom
  %14 = load float, float* %arrayidx, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %mul11 = fmul float %12, %14
  store i32 0, i32* %j, align 4, !tbaa !13
  %15 = load i32, i32* %N, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %cmp1378 = icmp sgt i32 %15, 0
  %16 = load i32, i32* %k, align 4, !tbaa !13
  br i1 %cmp1378, label %for.body14, label %for.end

for.body14:                                       ; preds = %for.body, %for.body14
  %17 = phi i32 [ %23, %for.body14 ], [ %16, %for.body ]
  %storemerge7779 = phi i32 [ %inc, %for.body14 ], [ 0, %for.body ]
  %18 = load i32, i32* %ldb, align 4, !tbaa !13, !HRCLGlobalLoadStore !9, !HRCLIntermediateOnly !9
  %mul15 = mul nsw i32 %18, %17
  %add16 = add nsw i32 %mul15, %storemerge7779
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds float, float* %9, i64 %idxprom17
  %19 = load float, float* %arrayidx18, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %mul19 = fmul float %mul11, %19
  %20 = load i32, i32* %ldc, align 4, !tbaa !13, !HRCLGlobalLoadStore !9, !HRCLIntermediateOnly !9
  %mul20 = mul nsw i32 %20, %.omp.iv.0.reg2mem74.083
  %add21 = add nsw i32 %mul20, %storemerge7779
  %idxprom22 = sext i32 %add21 to i64
  %arrayidx23 = getelementptr inbounds float, float* %10, i64 %idxprom22
  %21 = load float, float* %arrayidx23, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %add24 = fadd float %mul19, %21
  store float %add24, float* %arrayidx23, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %inc = add nuw nsw i32 %storemerge7779, 1
  store i32 %inc, i32* %j, align 4, !tbaa !13
  %22 = load i32, i32* %N, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %cmp13 = icmp slt i32 %inc, %22
  %23 = load i32, i32* %k, align 4, !tbaa !13
  br i1 %cmp13, label %for.body14, label %for.end

for.end:                                          ; preds = %for.body14, %for.body
  %.lcssa = phi i32 [ %16, %for.body ], [ %23, %for.body14 ]
  %inc26 = add nsw i32 %.lcssa, 1
  store i32 %inc26, i32* %k, align 4, !tbaa !13
  %24 = load i32, i32* %K, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %cmp8 = icmp slt i32 %inc26, %24
  br i1 %cmp8, label %for.body, label %omp.inner.for.inc

omp.inner.for.inc:                                ; preds = %for.end, %for.cond.preheader
  %add28 = add nsw i32 %.omp.iv.0.reg2mem74.083, 1
  %cmp6 = icmp slt i32 %.omp.iv.0.reg2mem74.083, %cond
  br i1 %cmp6, label %for.cond.preheader, label %omp.loop.exit

omp.loop.exit:                                    ; preds = %omp.inner.for.inc, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @0, i32 %5) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #11
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry, %omp.loop.exit
  ret void
}

[0;1;33mWARNING [0m[Utils.cpp:136] [0m[1mNot handling arguments for kmpc_forks
[0m
; Function Attrs: norecurse nounwind
define internal void @.omp_outlined..7(i32* noalias nocapture readonly %.global_tid., i32* noalias nocapture readnone %.bound_tid., i32* nocapture readnone dereferenceable(4) %M, i32* nocapture readnone dereferenceable(4) %K, float* nocapture readonly dereferenceable(4) %ALPHA, [27 x float]** nocapture readonly dereferenceable(8) %matA, i32* nocapture readnone dereferenceable(4) %N, [173056 x float]** nocapture readonly dereferenceable(8) %matC, [173056 x float]** nocapture readonly dereferenceable(8) %matB) #8 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #11
  store i32 0, i32* %.omp.lb, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #11
  store i32 15, i32* %.omp.ub, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #11
  store i32 1, i32* %.omp.stride, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #11
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @0, i32 %4, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1) #11
  %5 = load i32, i32* %.omp.ub, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %6 = icmp slt i32 %5, 15
  %cond = select i1 %6, i32 %5, i32 15
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %7 = load i32, i32* %.omp.lb, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %8 = sext i32 %cond to i64
  %9 = load [27 x float]*, [27 x float]** %matA, align 8
  %10 = load [173056 x float]*, [173056 x float]** %matB, align 8
  %11 = load [173056 x float]*, [173056 x float]** %matC, align 8
  %cmp284 = icmp sgt i32 %7, %cond
  br i1 %cmp284, label %omp.loop.exit, label %for.cond.preheader.preheader

for.cond.preheader.preheader:                     ; preds = %entry
  %12 = sext i32 %7 to i64
  %13 = add nsw i64 %12, 1
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %omp.inner.for.inc, %for.cond.preheader.preheader
  %indvar = phi i64 [ %indvar.next, %omp.inner.for.inc ], [ 0, %for.cond.preheader.preheader ]
  %indvars.iv42.reg2mem80.085 = phi i64 [ %indvars.iv.next43, %omp.inner.for.inc ], [ %12, %for.cond.preheader.preheader ]
  %14 = add i64 %indvar, %12
  %scevgep = getelementptr [173056 x float], [173056 x float]* %11, i64 %14, i64 0
  %15 = add i64 %13, %indvar
  %scevgep87 = getelementptr [173056 x float], [173056 x float]* %11, i64 %15, i64 0
  br label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.inc20
  %indvars.iv39.reg2mem78.083 = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next40, %for.inc20 ]
  %16 = load float, float* %ALPHA, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %arrayidx5 = getelementptr inbounds [27 x float], [27 x float]* %9, i64 %indvars.iv42.reg2mem80.085, i64 %indvars.iv39.reg2mem78.083
  %17 = load float, float* %arrayidx5, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %mul6 = fmul float %16, %17
  %18 = add nuw i64 %indvars.iv39.reg2mem78.083, 1
  %scevgep91 = getelementptr [173056 x float], [173056 x float]* %10, i64 %18, i64 0
  %scevgep89 = getelementptr [173056 x float], [173056 x float]* %10, i64 %indvars.iv39.reg2mem78.083, i64 0
  %bound0 = icmp ult float* %scevgep, %scevgep91
  %bound1 = icmp ult float* %scevgep89, %scevgep87
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body9, label %vector.ph

vector.ph:                                        ; preds = %for.body
  %broadcast.splatinsert95 = insertelement <4 x float> undef, float %mul6, i32 0
  %broadcast.splat96 = shufflevector <4 x float> %broadcast.splatinsert95, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert97 = insertelement <4 x float> undef, float %mul6, i32 0
  %broadcast.splat98 = shufflevector <4 x float> %broadcast.splatinsert97, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %19 = getelementptr inbounds [173056 x float], [173056 x float]* %10, i64 %indvars.iv39.reg2mem78.083, i64 %index
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %20, align 4, !tbaa !15, !alias.scope !50
  %21 = getelementptr inbounds float, float* %19, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  %wide.load94 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !15, !alias.scope !50
  %23 = fmul <4 x float> %broadcast.splat96, %wide.load
  %24 = fmul <4 x float> %broadcast.splat98, %wide.load94
  %25 = getelementptr inbounds [173056 x float], [173056 x float]* %11, i64 %indvars.iv42.reg2mem80.085, i64 %index
  %26 = bitcast float* %25 to <4 x float>*
  %wide.load99 = load <4 x float>, <4 x float>* %26, align 4, !tbaa !15, !alias.scope !53, !noalias !50
  %27 = getelementptr inbounds float, float* %25, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load100 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !15, !alias.scope !53, !noalias !50
  %29 = fadd <4 x float> %wide.load99, %23
  %30 = fadd <4 x float> %wide.load100, %24
  %31 = bitcast float* %25 to <4 x float>*
  store <4 x float> %29, <4 x float>* %31, align 4, !tbaa !15, !alias.scope !53, !noalias !50
  %32 = bitcast float* %27 to <4 x float>*
  store <4 x float> %30, <4 x float>* %32, align 4, !tbaa !15, !alias.scope !53, !noalias !50
  %index.next = add i64 %index, 8
  %33 = icmp eq i64 %index.next, 173056
  br i1 %33, label %for.inc20, label %vector.body, !llvm.loop !55

for.body9:                                        ; preds = %for.body, %for.body9
  %indvars.iv.reg2mem76.082 = phi i64 [ %indvars.iv.next, %for.body9 ], [ 0, %for.body ]
  %arrayidx13 = getelementptr inbounds [173056 x float], [173056 x float]* %10, i64 %indvars.iv39.reg2mem78.083, i64 %indvars.iv.reg2mem76.082
  %34 = load float, float* %arrayidx13, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %mul14 = fmul float %mul6, %34
  %arrayidx18 = getelementptr inbounds [173056 x float], [173056 x float]* %11, i64 %indvars.iv42.reg2mem80.085, i64 %indvars.iv.reg2mem76.082
  %35 = load float, float* %arrayidx18, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %add19 = fadd float %35, %mul14
  store float %add19, float* %arrayidx18, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.reg2mem76.082, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 173056
  br i1 %exitcond, label %for.inc20, label %for.body9, !llvm.loop !56

for.inc20:                                        ; preds = %vector.body, %for.body9
  %indvars.iv.next40 = add nuw nsw i64 %indvars.iv39.reg2mem78.083, 1
  %exitcond41 = icmp eq i64 %indvars.iv.next40, 27
  br i1 %exitcond41, label %omp.inner.for.inc, label %for.body

omp.inner.for.inc:                                ; preds = %for.inc20
  %indvars.iv.next43 = add nsw i64 %indvars.iv42.reg2mem80.085, 1
  %cmp2 = icmp slt i64 %indvars.iv42.reg2mem80.085, %8
  %indvar.next = add i64 %indvar, 1
  br i1 %cmp2, label %for.cond.preheader, label %omp.loop.exit

omp.loop.exit:                                    ; preds = %omp.inner.for.inc, %entry
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @0, i32 %4) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #11
  ret void
}

[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
In file included from gemm.c:6:
/scratch/mmaxim/cmux/src/cmux.c:33:17: warning: passing 'char *__attribute__((address_space(1)))' to parameter of type 'const __attribute__((address_space(1))) char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        strcpy(buffer, message->request);
                       ^~~~~~~~~~~~~~~~
/scratch/mmaxim/hero/install/bin/../lib/gcc/riscv32-unknown-elf/7.1.1/../../../../riscv32-unknown-elf/include/string.h:34:63: note: passing argument to parameter here
char    *_EXFUN(strcpy,(char *__restrict, const char *__restrict));
                                                                ^
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
In file included from gemm.c:6:
/scratch/mmaxim/cmux/src/cmux.c:51:19: warning: assigning to 'char *__attribute__((address_space(1)))' from '__attribute__((address_space(1))) char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        message->request = strsep(&buffer, ":");
                         ^ ~~~~~~~~~~~~~~~~~~~~
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
gemm.c:116:11: warning: initializing 'float (__attribute__((address_space(1))) *)[27]' with an expression of type 'float (*)[27]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  float (*matA)[K] = (float(*)[K]) A;
          ^          ~~~~~~~~~~~~~~~
gemm.c:117:11: warning: initializing 'float (__attribute__((address_space(1))) *)[173056]' with an expression of type 'float (*)[173056]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  float (*matB)[N] = (float(*)[N]) B;
          ^          ~~~~~~~~~~~~~~~
gemm.c:118:11: warning: initializing 'float (__attribute__((address_space(1))) *)[173056]' with an expression of type 'float (*)[173056]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  float (*matC)[N] = (float(*)[N]) C;
          ^          ~~~~~~~~~~~~~~~
[0;1;36mPOINTER CAST: [0mCGOpenMPRuntime::getOrCreateDefaultLocation: @.str = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
[0;1;36mPOINTER CAST: [0mAccepting Address Space Cast for Array To Pointer Decay for HERO
[0;1;33mWARNING [0m[Utils.cpp:136] [0m[1mNot handling arguments for kmpc_forks
[0m[0;1;36mNOTICE: [0m[1mAnalyzing module "[0;1;35mgemm.c[0m[1m" for target [0;1;35mriscv32-hero-unknown-elf[0m[1m, using [0;1;35mScratchpad Memory[0m[1m for local storage
[0m[0;1;36mNOTICE: [0mOverriding default CPU memory size with 32768 bytes
[0m[1mAnalysing kernel [0;1;35mgemm.c[0m[1m:[0;1;36m__omp_offloading_803_1108d5d_gemm_zero_l125[0m
[0;1;33mWARNING [0m[Utils.cpp:136] [0m[1mNot handling arguments for kmpc_forks
[0m[0;1;33mWARNING [0m[Utils.cpp:136] [0m[1mNot handling arguments for kmpc_forks
[0m[0;1;33mWARNING [0m[Utils.cpp:136] [0m[1mNot handling arguments for kmpc_forks
[0m  Replacing trip count 1 with [CONSTANT] 1
  Replacing trip count 173057 with [ IN, UPPER - 1 - start] 173056
SCEVCouldNotCompute in replaceOmpVarWith: ***COULDNOTCOMPUTE***
  Replacing trip count 8 with 8
  Replacing trip count 173057 with [ IN, UPPER - 1 - start] 173056
SCEVCouldNotCompute in replaceOmpVarWith: ***COULDNOTCOMPUTE***
  Replacing trip count 8 with 8
  Replacing trip count 173057 with [ IN, UPPER - 1 - start] 173056
  Replacing trip count 28 with [ IN, UPPER - 1 - start] 27
  Replacing trip count 173057 with [ IN, UPPER - 1 - start] 173056
SCEVCouldNotCompute in replaceOmpVarWith: ***COULDNOTCOMPUTE***
  Replacing trip count 8 with 8
  Replacing trip count 173057 with [ IN, UPPER - 1 - start] 173056
SCEVCouldNotCompute in replaceOmpVarWith: ***COULDNOTCOMPUTE***
  Replacing trip count 8 with 8
  Replacing trip count 173057 with [ IN, UPPER - 1 - start] 173056
SCEVCouldNotCompute in replaceOmpVarWith: ***COULDNOTCOMPUTE***
  Replacing trip count 8 with 8
  Replacing trip count 28 with [ IN, UPPER - 1 - start] 27
  Replacing trip count 28 with [ IN, UPPER - 1 - start] 27
  Replacing trip count 173057 with [ IN, UPPER - 1 - start] 173056
SCEVCouldNotCompute in replaceOmpVarWith: ***COULDNOTCOMPUTE***
  Replacing trip count 15 with 15
  Replacing trip count 173057 with [ IN, UPPER - 1 - start] 173056
SCEVCouldNotCompute in replaceOmpVarWith: ***COULDNOTCOMPUTE***
  Replacing trip count 15 with 15
  Replacing trip count 173057 with [ IN, UPPER - 1 - start] 173056
SCEVCouldNotCompute in replaceOmpVarWith: ***COULDNOTCOMPUTE***
  Replacing trip count 15 with 15
  Replacing trip count 28 with [ IN, UPPER - 1 - start] 27
Reduced IV   %k.0 = phi i32 [ 0, %omp.inner.for.body ], [ %inc16, %for.inc15 ] to -99 trips
NOT SUCCESSFUL!
Reduced IV   %n.0 = phi i32 [ 0, %for.body ], [ %inc, %for.body8 ] to 909 trips
Reduced IV   %.omp.iv.0 = phi i32 [ %6, %entry ], [ %add18, %omp.inner.for.inc ] to -99 trips
NOT SUCCESSFUL!
Reduced IV   %k.0 = phi i32 [ 0, %omp.inner.for.body ], [ %inc16, %for.inc15 ] to -99 trips
Reduced IV   %n.0 = phi i32 [ 0, %for.body ], [ %inc, %for.body8 ] to 909 trips
Overrule intervals: Checking for environment variable HERCULES_OVERRULE_INTERVALS_riscv32...Not defined
Overrule loops: Checking for environment variable HERCULES_OVERRULE_LOOPS_riscv32...Not defined
[0;1;33mWARNING [0m[FootprintAnalysis.cpp:5873] [0m[1mRemoving interval with zero size
[0m[0m[1mINTERVAL 1: [0m[0;1;31mCOMPATIBLE [0mfrom regions 0 1 (-g for line info)
      Reason  : [0m[1mUnable to outline
[0m      Reason  : [0m[1mcall to external function: __kmpc_global_thread_num (-g for line info)
[0m
[0m[1mINTERVAL 2: [0m[0;1;32mPREDICTABLE [0m[1mLINEAR [0mfrom regions 2 (-g for line info)
  Memory use  : 16 bytes
    [[0;1;36mSCEV[0m] RANGE: ALPHA.addr [ 0 : 0 ] (SPM element size = 4)
    [[0;1;36mSCEV[0m] RANGE: M.addr [ 0 : 0 ] (SPM element size = 4)
    [[0;1;36mSCEV[0m] RANGE: N.addr [ 0 : 0 ] (SPM element size = 4)
    [[0;1;36mSCEV[0m] RANGE: K.addr [ 0 : 0 ] (SPM element size = 4)

[0m[1mINTERVAL 3: [0m[0;1;31mCOMPATIBLE [0mfrom regions 3 (-g for line info)
      Reason  : [0m[1mcall to external function: __kmpc_push_num_threads (-g for line info)
[0m
[0m[1mINTERVAL 5: [0m[0;1;31mCOMPATIBLE [0mfrom regions 4 (-g for line info)
      Reason  : [0m[1mUnable to outline
[0m
[0m[1mINTERVAL 9: [0m[0;1;32mPREDICTABLE [0m[1mLINEAR [0mfrom regions 8 (-g for line info)
  Memory use  : 36 bytes
    [[0;1;36mSCEV[0m] RANGE: ALPHA [ 0 : 0 ] (SPM element size = 4)
    [[0;1;36mSCEV[0m] RANGE: matA [ 0 : 7 ] [ 0 : 0 ] (SPM element size = 4)

[0m[1mINTERVAL 10: [0m[0;1;32mPREDICTABLE [0m[1mLOOP [0m(tiled 910) from regions 11 (-g for line info)
  Memory use  : 32760 bytes
    [[0;1;36mSCEV[0m] RANGE: matC [ 0 : 7 ] [ 0 : 909 ] (SPM element size = 4)
    [[0;1;36mSCEV[0m] RANGE: matB [ 0 : 0 ] [ 0 : 909 ] (SPM element size = 4)

Collecting instructions for intervals... [0%...16%...33%...50%...66%...83%...DONE]
[0;1;33mWARNING [0m[FootprintAnalysis.cpp:790] [0m[1mNot annotating ALLOCA
[0m[0;1;33mWARNING [0m[FootprintAnalysis.cpp:790] [0m[1mNot annotating ALLOCA
[0m[0;1;33mWARNING [0m[FootprintAnalysis.cpp:790] [0m[1mNot annotating ALLOCA
[0m[0;1;33mWARNING [0m[FootprintAnalysis.cpp:790] [0m[1mNot annotating ALLOCA
[0m[0;1;33mWARNING [0m[FootprintAnalysis.cpp:796] [0m[1mNot annotating Non-GEP, Non-Alloca
[0m*A.ptr is float* %ALPHA
[0;1;33mWARNING: [0mNo min offset for baseArray: [27 x float] addrspace(1)** %matA
[0;1;33mWARNING: [0mNo min offset for baseArray: [27 x float] addrspace(1)** %matA
[0;1;34m[HERCULES] Footprint Analysis : [0m[1mgemm.c (riscv32-hero-unknown-elf)[0m: Identified 6 interval(s) in 1 kernel(s).
[0;1;33mWARNING [0m[WarpSeparate.cpp:121] [0m[1mInserting COMPATIBLE PremNotify at entry "__omp_offloading_803_1108d5d_gemm_zero_l125" with major ID INT_MAX.
[0m[0;1;36mNOTICE: [0m[1mTransforming module "[0;1;35mgemm.c[0m[1m" for target [0;1;35mriscv32-hero-unknown-elf[0m[1m, using [0;1;35mScratchpad Memory[0m[1m for local storage
[0m*addr is   %arrayidx_inward = getelementptr inbounds [27 x float], [27 x float] addrspace(1)* %for.body8_721810109093650843., i32 %.omp.iv.0.reg2mem70.0, !HRCLSPMTripCountUB !33, !HRCLInwardsOriginal !39, !HRCLSPMIndVar !36
clang-9: /scratch/mmaxim/hero/toolchain/HerculesCompiler-public/llvm-passes/src/Passes/WarpSpecialize/WarpSpecialize.cpp:3634: std::string {anonymous}::WarpSpecializeOMPOutlinedPass::findSpmArrayDims(llvm::GetElementPtrInst*, std::vector<int, std::allocator<int> >&): Assertion `Lo != nullptr && Hi != nullptr && "Failed to get array dims"' failed.
Stack dump:
0.	Program arguments: /scratch/mmaxim/hero/install/bin/clang-9 -cc1 -triple riscv32-hero-unknown-elf -aux-triple aarch64-hero-linux-gnu -load /scratch/mmaxim/hero/install/lib/hercules/libAnnotatePTXGlobals.so -load /scratch/mmaxim/hero/install/lib/hercules/libFootprintAnalysis.so -load /scratch/mmaxim/hero/install/lib/hercules/libLoopChunk.so -load /scratch/mmaxim/hero/install/lib/hercules/libLoopExtract.so -load /scratch/mmaxim/hero/install/lib/hercules/libWarpSeparate.so -load /scratch/mmaxim/hero/install/lib/hercules/libWarpSpecialize.so -load /scratch/mmaxim/hero/install/lib/hercules/libChannelArgInsertion.so -emit-llvm -disable-free -main-file-name gemm.c -static-define -mrelocation-model static -mthread-model posix -fmath-errno -mconstructor-aliases -mllvm --riscv-default-as=0 -D__host=__attribute((address_space(1))) -D__device=__attribute((address_space(0))) -target-feature +m -target-feature +a -target-feature +f -target-feature +c -target-feature +xpulpv2 -target-feature +relax -target-abi ilp32 -dwarf-column-info -debugger-tuning=gdb -momit-leaf-frame-pointer -coverage-notes-file /scratch/mmaxim/hero/openmp-examples/baby_gemm/gemm.gcno -resource-dir /scratch/mmaxim/hero/install/lib/clang/9.0.0 -dependency-file .deps/gemm.d -MP -MT gemm.ll -include hero_64.h -I /scratch/mmaxim/hero/install/../openmp-examples/polybench-acc/common -I /scratch/mmaxim/cmux/inc -I /scratch/mmaxim/cmux/src -I /scratch/mmaxim/hero/openmp-examples/common -isysroot /scratch/mmaxim/hero/install/aarch64-hero-linux-gnu/ -internal-isystem /scratch/mmaxim/hero/install/bin/../lib/gcc/riscv32-unknown-elf/7.1.1/../../../../riscv32-unknown-elf/include -internal-isystem /scratch/mmaxim/hero/install/lib/clang/9.0.0/include -internal-isystem /scratch/mmaxim/hero/install/aarch64-hero-linux-gnu/usr/include -O3 -fdebug-compilation-dir /scratch/mmaxim/hero/openmp-examples/baby_gemm -ferror-limit 19 -fmessage-length 0 -fopenmp -fno-signed-char -fobjc-runtime=gcc -fdiagnostics-show-option -vectorize-loops -vectorize-slp -fopenmp-is-device -fopenmp-host-ir-file-path /tmp/gemm-d9aaac.bc -faddrsig -o /tmp/gemm-7b196f.ll -x c gemm.c 
1.	<eof> parser at end of file
2.	Per-module optimization passes
3.	Running pass 'HERCULES Warp Specialization' on module 'gemm.c'.
 #0 0x00007f83bb4c27c5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) /scratch/mmaxim/hero/toolchain/llvm-project/llvm/lib/Support/Unix/Signals.inc:533:0
 #1 0x00007f83bb4c2856 PrintStackTraceSignalHandler(void*) /scratch/mmaxim/hero/toolchain/llvm-project/llvm/lib/Support/Unix/Signals.inc:594:0
 #2 0x00007f83bb4c0a5b llvm::sys::RunSignalHandlers() /scratch/mmaxim/hero/toolchain/llvm-project/llvm/lib/Support/Signals.cpp:68:0
 #3 0x00007f83bb4c2247 SignalHandler(int) /scratch/mmaxim/hero/toolchain/llvm-project/llvm/lib/Support/Unix/Signals.inc:385:0
 #4 0x00007f83ba1e95f0 __restore_rt (/lib64/libpthread.so.0+0xf5f0)
 #5 0x00007f83b63d8337 raise (/lib64/libc.so.6+0x36337)
 #6 0x00007f83b63d9a28 abort (/lib64/libc.so.6+0x37a28)
 #7 0x00007f83b63d1156 __assert_fail_base (/lib64/libc.so.6+0x2f156)
 #8 0x00007f83b63d1202 (/lib64/libc.so.6+0x2f202)
 #9 0x00007f83a71a97bd (anonymous namespace)::WarpSpecializeOMPOutlinedPass::findSpmArrayDims(llvm::GetElementPtrInst*, std::vector<int, std::allocator<int> >&) /scratch/mmaxim/hero/toolchain/HerculesCompiler-public/llvm-passes/src/Passes/WarpSpecialize/WarpSpecialize.cpp:3637:0
#10 0x00007f83a71ad3b7 (anonymous namespace)::WarpSpecializeOMPOutlinedPass::createScratchpadBuffer(llvm::Instruction*, (anonymous namespace)::WarpSpecializeOMPOutlinedPass::SpmAlloc&) /scratch/mmaxim/hero/toolchain/HerculesCompiler-public/llvm-passes/src/Passes/WarpSpecialize/WarpSpecialize.cpp:4141:0
#11 0x00007f83a71aa2bf (anonymous namespace)::WarpSpecializeOMPOutlinedPass::createSpmBuffers(std::vector<llvm::Instruction*, std::allocator<llvm::Instruction*> >, (anonymous namespace)::WarpSpecializeOMPOutlinedPass::SpmAlloc&, std::string) /scratch/mmaxim/hero/toolchain/HerculesCompiler-public/llvm-passes/src/Passes/WarpSpecialize/WarpSpecialize.cpp:3729:0
#12 0x00007f83a71a582b (anonymous namespace)::WarpSpecializeOMPOutlinedPass::warpSpecializeExecute(llvm::Function&, (anonymous namespace)::WarpSpecializeOMPOutlinedPass::SpmAlloc&, int) /scratch/mmaxim/hero/toolchain/HerculesCompiler-public/llvm-passes/src/Passes/WarpSpecialize/WarpSpecialize.cpp:2764:0
#13 0x00007f83a719723c (anonymous namespace)::WarpSpecializeOMPOutlinedPass::runOnModule(llvm::Module&) /scratch/mmaxim/hero/toolchain/HerculesCompiler-public/llvm-passes/src/Passes/WarpSpecialize/WarpSpecialize.cpp:353:0
#14 0x00007f83be9ade2d (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /scratch/mmaxim/hero/toolchain/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:1750:0
#15 0x00007f83be9ae59c llvm::legacy::PassManagerImpl::run(llvm::Module&) /scratch/mmaxim/hero/toolchain/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:1863:0
#16 0x00007f83be9ae7d5 llvm::legacy::PassManager::run(llvm::Module&) /scratch/mmaxim/hero/toolchain/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:1895:0
#17 0x00007f83b8b1253d (anonymous namespace)::EmitAssemblyHelper::EmitAssembly(clang::BackendAction, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream> >) /scratch/mmaxim/hero/toolchain/llvm-project/clang/lib/CodeGen/BackendUtil.cpp:893:0
#18 0x00007f83b8b1663f clang::EmitBackendOutput(clang::DiagnosticsEngine&, clang::HeaderSearchOptions const&, clang::CodeGenOptions const&, clang::TargetOptions const&, clang::LangOptions const&, llvm::DataLayout const&, llvm::Module*, clang::BackendAction, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream> >) /scratch/mmaxim/hero/toolchain/llvm-project/clang/lib/CodeGen/BackendUtil.cpp:1498:0
#19 0x00007f83b8f3c376 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) /scratch/mmaxim/hero/toolchain/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp:305:0
#20 0x00007f83aebb7dc6 clang::ParseAST(clang::Sema&, bool, bool) /scratch/mmaxim/hero/toolchain/llvm-project/clang/lib/Parse/ParseAST.cpp:178:0
#21 0x00007f83b7df6bea clang::ASTFrontendAction::ExecuteAction() /scratch/mmaxim/hero/toolchain/llvm-project/clang/lib/Frontend/FrontendAction.cpp:1043:0
#22 0x00007f83b8f39084 clang::CodeGenAction::ExecuteAction() /scratch/mmaxim/hero/toolchain/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp:1060:0
#23 0x00007f83b7df653f clang::FrontendAction::Execute() /scratch/mmaxim/hero/toolchain/llvm-project/clang/lib/Frontend/FrontendAction.cpp:938:0
#24 0x00007f83b7d83164 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) /scratch/mmaxim/hero/toolchain/llvm-project/clang/lib/Frontend/CompilerInstance.cpp:944:0
#25 0x00007f83b780e281 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) /scratch/mmaxim/hero/toolchain/llvm-project/clang/lib/FrontendTool/ExecuteCompilerInvocation.cpp:291:0
#26 0x00000000004561a7 cc1_main(llvm::ArrayRef<char const*>, char const*, void*) /scratch/mmaxim/hero/toolchain/llvm-project/clang/tools/driver/cc1_main.cpp:249:0
#27 0x000000000044c32f ExecuteCC1Tool(llvm::ArrayRef<char const*>, llvm::StringRef) /scratch/mmaxim/hero/toolchain/llvm-project/clang/tools/driver/driver.cpp:309:0
#28 0x000000000044c9f5 main /scratch/mmaxim/hero/toolchain/llvm-project/clang/tools/driver/driver.cpp:381:0
#29 0x00007f83b63c4505 __libc_start_main (/lib64/libc.so.6+0x22505)
#30 0x000000000044acf9 _start (/scratch/mmaxim/hero/install/bin/clang-9+0x44acf9)
clang-9: error: unable to execute command: Aborted
[0;1;33mWARNING [0m[Utils.cpp:136] [0m[1mNot handling arguments for kmpc_forks
[0m[0;1;33mWARNING [0m[Utils.cpp:136] [0m[1mNot handling arguments for kmpc_forks
[0m
; Function Attrs: norecurse nounwind
define internal void @.omp_outlined.(i32* noalias nocapture readonly %.global_tid., i32* noalias nocapture readnone %.bound_tid., i32* nocapture readonly dereferenceable(4) %M, i32* nocapture dereferenceable(4) %k, i32* nocapture readonly dereferenceable(4) %K, float* nocapture readonly dereferenceable(4) %ALPHA, float** nocapture readonly dereferenceable(8) %A, i32* nocapture readonly dereferenceable(4) %lda, i32* nocapture dereferenceable(4) %j, i32* nocapture readonly dereferenceable(4) %N, float** nocapture readonly dereferenceable(8) %C, i32* nocapture readonly dereferenceable(4) %ldc, float** nocapture readonly dereferenceable(8) %B, i32* nocapture readonly dereferenceable(4) %ldb) #8 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %0 = load i32, i32* %M, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %sub2 = add nsw i32 %0, -1
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %1 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #11
  store i32 0, i32* %.omp.lb, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %2 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #11
  store i32 %sub2, i32* %.omp.ub, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %3 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #11
  store i32 1, i32* %.omp.stride, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %4 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @0, i32 %5, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1) #11
  %6 = load i32, i32* %.omp.ub, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %cmp5 = icmp sgt i32 %6, %sub2
  %cond = select i1 %cmp5, i32 %sub2, i32 %6
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %7 = load i32, i32* %.omp.lb, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %8 = load float*, float** %A, align 8
  %9 = load float*, float** %B, align 8
  %10 = load float*, float** %C, align 8
  %cmp682 = icmp sgt i32 %7, %cond
  br i1 %cmp682, label %omp.loop.exit, label %for.cond.preheader

for.cond.preheader:                               ; preds = %omp.precond.then, %omp.inner.for.inc
  %.omp.iv.0.reg2mem74.083.reg2mem45.0 = phi i32 [ %add28, %omp.inner.for.inc ], [ %7, %omp.precond.then ]
  store i32 0, i32* %k, align 4, !tbaa !13
  %11 = load i32, i32* %K, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %cmp880 = icmp sgt i32 %11, 0
  br i1 %cmp880, label %for.body, label %omp.inner.for.inc

for.body:                                         ; preds = %for.cond.preheader, %for.end
  %storemerge81.reg2mem.0 = phi i32 [ %inc26, %for.end ], [ 0, %for.cond.preheader ]
  %12 = load float, float* %ALPHA, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %13 = load i32, i32* %lda, align 4, !tbaa !13, !HRCLGlobalLoadStore !9, !HRCLIntermediateOnly !9
  %mul9 = mul nsw i32 %13, %.omp.iv.0.reg2mem74.083.reg2mem45.0
  %add10 = add nsw i32 %mul9, %storemerge81.reg2mem.0
  %idxprom = sext i32 %add10 to i64
  %arrayidx = getelementptr inbounds float, float* %8, i64 %idxprom
  %14 = load float, float* %arrayidx, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %mul11 = fmul float %12, %14
  store i32 0, i32* %j, align 4, !tbaa !13
  %15 = load i32, i32* %N, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %cmp1378 = icmp sgt i32 %15, 0
  %16 = load i32, i32* %k, align 4, !tbaa !13
  br i1 %cmp1378, label %for.body14, label %for.end

for.body14:                                       ; preds = %for.body, %for.body14
  %storemerge7779.reg2mem.0 = phi i32 [ %inc, %for.body14 ], [ 0, %for.body ]
  %.reg2mem43.0 = phi i32 [ %22, %for.body14 ], [ %16, %for.body ]
  %17 = load i32, i32* %ldb, align 4, !tbaa !13, !HRCLGlobalLoadStore !9, !HRCLIntermediateOnly !9
  %mul15 = mul nsw i32 %17, %.reg2mem43.0
  %add16 = add nsw i32 %mul15, %storemerge7779.reg2mem.0
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds float, float* %9, i64 %idxprom17
  %18 = load float, float* %arrayidx18, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %mul19 = fmul float %mul11, %18
  %19 = load i32, i32* %ldc, align 4, !tbaa !13, !HRCLGlobalLoadStore !9, !HRCLIntermediateOnly !9
  %mul20 = mul nsw i32 %19, %.omp.iv.0.reg2mem74.083.reg2mem45.0
  %add21 = add nsw i32 %mul20, %storemerge7779.reg2mem.0
  %idxprom22 = sext i32 %add21 to i64
  %arrayidx23 = getelementptr inbounds float, float* %10, i64 %idxprom22
  %20 = load float, float* %arrayidx23, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %add24 = fadd float %mul19, %20
  store float %add24, float* %arrayidx23, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %inc = add nuw nsw i32 %storemerge7779.reg2mem.0, 1
  store i32 %inc, i32* %j, align 4, !tbaa !13
  %21 = load i32, i32* %N, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %cmp13 = icmp slt i32 %inc, %21
  %22 = load i32, i32* %k, align 4, !tbaa !13
  br i1 %cmp13, label %for.body14, label %for.end

for.end:                                          ; preds = %for.body14, %for.body
  %.lcssa.reg2mem.0 = phi i32 [ %16, %for.body ], [ %22, %for.body14 ]
  %inc26 = add nsw i32 %.lcssa.reg2mem.0, 1
  store i32 %inc26, i32* %k, align 4, !tbaa !13
  %23 = load i32, i32* %K, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %cmp8 = icmp slt i32 %inc26, %23
  br i1 %cmp8, label %for.body, label %omp.inner.for.inc

omp.inner.for.inc:                                ; preds = %for.end, %for.cond.preheader
  %cmp6 = icmp slt i32 %.omp.iv.0.reg2mem74.083.reg2mem45.0, %cond
  %add28 = add nsw i32 %.omp.iv.0.reg2mem74.083.reg2mem45.0, 1
  br i1 %cmp6, label %for.cond.preheader, label %omp.loop.exit

omp.loop.exit:                                    ; preds = %omp.inner.for.inc, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @0, i32 %5) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #11
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry, %omp.loop.exit
  ret void
}

[0;1;33mWARNING [0m[Utils.cpp:136] [0m[1mNot handling arguments for kmpc_forks
[0m
; Function Attrs: norecurse nounwind
define internal void @.omp_outlined..7(i32* noalias nocapture readonly %.global_tid., i32* noalias nocapture readnone %.bound_tid., i32* nocapture readnone dereferenceable(4) %M, i32* nocapture readnone dereferenceable(4) %K, float* nocapture readonly dereferenceable(4) %ALPHA, [27 x float]** nocapture readonly dereferenceable(8) %matA, i32* nocapture readnone dereferenceable(4) %N, [173056 x float]** nocapture readonly dereferenceable(8) %matC, [173056 x float]** nocapture readonly dereferenceable(8) %matB) #8 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #11
  store i32 0, i32* %.omp.lb, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #11
  store i32 15, i32* %.omp.ub, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #11
  store i32 1, i32* %.omp.stride, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #11
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @0, i32 %4, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1) #11
  %5 = load i32, i32* %.omp.ub, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %6 = icmp slt i32 %5, 15
  %cond = select i1 %6, i32 %5, i32 15
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %7 = load i32, i32* %.omp.lb, align 4, !tbaa !13, !HRCLGlobalLoadStore !9
  %8 = sext i32 %cond to i64
  %9 = load [27 x float]*, [27 x float]** %matA, align 8
  %10 = load [173056 x float]*, [173056 x float]** %matB, align 8
  %11 = load [173056 x float]*, [173056 x float]** %matC, align 8
  %cmp284 = icmp sgt i32 %7, %cond
  br i1 %cmp284, label %omp.loop.exit, label %for.cond.preheader.preheader

for.cond.preheader.preheader:                     ; preds = %entry
  %12 = sext i32 %7 to i64
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %omp.inner.for.inc.for.cond.preheader_crit_edge, %for.cond.preheader.preheader
  %indvars.iv42.reg2mem80.085.reg2mem58.0 = phi i64 [ %12, %for.cond.preheader.preheader ], [ %indvars.iv.next43, %omp.inner.for.inc.for.cond.preheader_crit_edge ]
  %indvar.reg2mem60.0 = phi i64 [ 0, %for.cond.preheader.preheader ], [ %indvar.next, %omp.inner.for.inc.for.cond.preheader_crit_edge ]
  %13 = add nsw i64 %indvar.reg2mem60.0, %12
  %scevgep = getelementptr [173056 x float], [173056 x float]* %11, i64 %13, i64 0
  %14 = add nsw i64 %13, 1
  %scevgep87 = getelementptr [173056 x float], [173056 x float]* %11, i64 %14, i64 0
  br label %for.body

for.body:                                         ; preds = %for.inc20, %for.cond.preheader
  %indvars.iv39.reg2mem78.083.reg2mem56.0 = phi i64 [ 0, %for.cond.preheader ], [ %17, %for.inc20 ]
  %15 = load float, float* %ALPHA, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %arrayidx5 = getelementptr inbounds [27 x float], [27 x float]* %9, i64 %indvars.iv42.reg2mem80.085.reg2mem58.0, i64 %indvars.iv39.reg2mem78.083.reg2mem56.0
  %16 = load float, float* %arrayidx5, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %mul6 = fmul float %15, %16
  %17 = add nuw nsw i64 %indvars.iv39.reg2mem78.083.reg2mem56.0, 1
  %scevgep91 = getelementptr [173056 x float], [173056 x float]* %10, i64 %17, i64 0
  %scevgep89 = getelementptr [173056 x float], [173056 x float]* %10, i64 %indvars.iv39.reg2mem78.083.reg2mem56.0, i64 0
  %bound0 = icmp ult float* %scevgep, %scevgep91
  %bound1 = icmp ult float* %scevgep89, %scevgep87
  %found.conflict = and i1 %bound1, %bound0
  br i1 %found.conflict, label %for.body9, label %vector.ph

vector.ph:                                        ; preds = %for.body
  %broadcast.splatinsert95 = insertelement <4 x float> undef, float %mul6, i32 0
  %broadcast.splat96 = shufflevector <4 x float> %broadcast.splatinsert95, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index.reg2mem.0 = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %18 = getelementptr inbounds [173056 x float], [173056 x float]* %10, i64 %indvars.iv39.reg2mem78.083.reg2mem56.0, i64 %index.reg2mem.0
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %19, align 4, !tbaa !15, !alias.scope !50
  %20 = getelementptr inbounds float, float* %18, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load94 = load <4 x float>, <4 x float>* %21, align 4, !tbaa !15, !alias.scope !50
  %22 = fmul <4 x float> %broadcast.splat96, %wide.load
  %23 = fmul <4 x float> %broadcast.splat96, %wide.load94
  %24 = getelementptr inbounds [173056 x float], [173056 x float]* %11, i64 %indvars.iv42.reg2mem80.085.reg2mem58.0, i64 %index.reg2mem.0
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load99 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !15, !alias.scope !53, !noalias !50
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load100 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !15, !alias.scope !53, !noalias !50
  %28 = fadd <4 x float> %22, %wide.load99
  %29 = fadd <4 x float> %23, %wide.load100
  store <4 x float> %28, <4 x float>* %25, align 4, !tbaa !15, !alias.scope !53, !noalias !50
  store <4 x float> %29, <4 x float>* %27, align 4, !tbaa !15, !alias.scope !53, !noalias !50
  %index.next = add nuw nsw i64 %index.reg2mem.0, 8
  %30 = icmp eq i64 %index.next, 173056
  br i1 %30, label %for.inc20, label %vector.body, !llvm.loop !55

for.body9:                                        ; preds = %for.body, %for.body9
  %indvars.iv.reg2mem76.082.reg2mem.0 = phi i64 [ %indvars.iv.next, %for.body9 ], [ 0, %for.body ]
  %arrayidx13 = getelementptr inbounds [173056 x float], [173056 x float]* %10, i64 %indvars.iv39.reg2mem78.083.reg2mem56.0, i64 %indvars.iv.reg2mem76.082.reg2mem.0
  %31 = load float, float* %arrayidx13, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %mul14 = fmul float %mul6, %31
  %arrayidx18 = getelementptr inbounds [173056 x float], [173056 x float]* %11, i64 %indvars.iv42.reg2mem80.085.reg2mem58.0, i64 %indvars.iv.reg2mem76.082.reg2mem.0
  %32 = load float, float* %arrayidx18, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %add19 = fadd float %32, %mul14
  store float %add19, float* %arrayidx18, align 4, !tbaa !15, !HRCLGlobalLoadStore !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.reg2mem76.082.reg2mem.0, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 173056
  br i1 %exitcond, label %for.inc20, label %for.body9, !llvm.loop !56

for.inc20:                                        ; preds = %vector.body, %for.body9
  %exitcond41 = icmp eq i64 %17, 27
  br i1 %exitcond41, label %omp.inner.for.inc, label %for.body

omp.inner.for.inc:                                ; preds = %for.inc20
  %cmp2 = icmp slt i64 %indvars.iv42.reg2mem80.085.reg2mem58.0, %8
  br i1 %cmp2, label %omp.inner.for.inc.for.cond.preheader_crit_edge, label %omp.loop.exit

omp.inner.for.inc.for.cond.preheader_crit_edge:   ; preds = %omp.inner.for.inc
  %indvar.next = add nuw nsw i64 %indvar.reg2mem60.0, 1
  %indvars.iv.next43 = add nsw i64 %indvars.iv42.reg2mem80.085.reg2mem58.0, 1
  br label %for.cond.preheader

omp.loop.exit:                                    ; preds = %omp.inner.for.inc, %entry
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @0, i32 %4) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #11
  ret void
}

clang-9: error: clang frontend command failed due to signal (use -v to see invocation)
clang version 9.0.0 (git@iis-git.ee.ethz.ch:hero/llvm-project.git bea3a647cfcbc91f9f46d515ba01d4431be2cde3)
Target: aarch64-hero-linux-gnu
Thread model: posix
InstalledDir: /scratch/mmaxim/hero/install/bin
clang-9: note: diagnostic msg: PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.
clang-9: note: diagnostic msg: Error generating preprocessed source(s).
make: *** [gemm.ll] Error 254
rm main-dev.OMP.ll main-host.OMP.ll
baby_gemm: No such file or directory
