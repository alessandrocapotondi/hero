variables:
  GIT_SUBMODULE_STRATEGY: recursive
  HERO_INSTALL: '$CI_PROJECT_DIR/install'

before_script:
  - mkdir -p $HERO_INSTALL

after_script:
  - chmod -R u+w $HERO_INSTALL

stages:
  - build_test_rest

build_test_archive:
  stage: build_test_rest
  script:
    - ./pack_huawei.sh
    - cd "$(mktemp -d)"
    - cp "$CI_PROJECT_DIR/hero_huawei.tar.gz" .
    - tar xf hero_huawei.tar.gz && rm hero_huawei.tar.gz
    - export HERO_INSTALL="$(pwd)/install"
    - ./setup.sh

build_test_rest:
  stage: build_test_rest
  script:
    ### build base toolchains
    - make tc-pulp
    ### build accelerator sdk
    - make sdk-pulp
    ### build examples
    - source env/esim.sh
    - >
      for d in helloworld; do
        make -C openmp-examples/$d all
      done
    ### compile testbench
    - cd hardware/vsim
    - ./compile.sh
    - cd -
    ### simulate examples
    - cd hardware/vsim
    - >
      for d in tests-pulp helloworld; do
        make -C ../../openmp-examples/$d clean all
        ../test/gen_slm_files.sh $d
        ./start_sim.sh
      done
    - cd -
    ### test benchmarks
    - >
      for d in openmp-examples/polybench-acc/*/; do
        if [ $(basename $d) = "common" ]; then
          continue
        fi
        make -C $d only=pulp default-as=host clean all
        make -C $d only=pulp clean all
        .gitlab-ci.d/verify-bench.sh $(basename $d)
      done
  artifacts:
    paths:
      - install
      - openmp-examples
      - pulp/sdk
