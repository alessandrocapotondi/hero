variables:
  GIT_SUBMODULE_STRATEGY: recursive
  RISCV: '$CI_PROJECT_DIR/install'

before_script:
  - mkdir -p $RISCV

after_script:
  - chmod -R u+w $RISCV

all:
  script:
    ### build_install_gcc
    - make tc-pulp tc-ariane-linux
    ### build_install_pulp-sdk
    - make pulp-sdk
    ### build_install_hero-sdk
    - export PULP_RISCV_GCC_TOOLCHAIN=$RISCV
    - source support/pulp-sdk/sourceme.sh
    - make hero-sdk
    ### build_install_llvm
    - make hero-llvm
    ### build_examples
    - source env/urania.sh
    - cd openmp-examples/helloworld
    - make all
    ### simulate_examples
    - cd ../..
    #- source env/urania.sh
    # BEGIN WORKAROUND (TODO: remove this)
    - source support/pulp-sdk/init.sh
    - git show origin/hw-orig:./patches/pulp-rt_sim_io.diff > pulp-rt_sim_io.diff
    - git show origin/hw-orig:./patches/libomptarget-pulp-rtl_no_main.diff > libomptarget-pulp-rtl_no_main.diff
    - patch -p0 -F 0 < libomptarget-pulp-rtl_no_main.diff
    - plpbuild --m libomptarget-pulp-rtl clean build --stdout
    - patch -p0 -F 0 < pulp-rt_sim_io.diff
    - plpbuild --m pulp-rt clean build --stdout
    # END WORKAROUND
    - make -C openmp-examples/helloworld only=pulp clean all
    - cd hardware
    - test/gen_slm_files.sh helloworld
    - cd vsim
    - ./compile.sh
    - ./start_sim.sh
  artifacts:
    paths:
      - hero-support
      - install
      - libhero-target
      - local.mk
      - support/pulp-sdk
      - openmp-examples
