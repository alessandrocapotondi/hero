variables:
  GIT_SUBMODULE_STRATEGY: recursive
  HERO_INSTALL: '$CI_PROJECT_DIR/install'

before_script:
  - mkdir -p $HERO_INSTALL

after_script:
  - chmod -R u+w $HERO_INSTALL

stages:
  - build_test_rest

build_test_archive:
  stage: build_test_rest
  script:
    - ./pack_huawei.sh
    - cd "$(mktemp -d)"
    - cp "$CI_PROJECT_DIR/hero_huawei.tar.gz" .
    - tar xf hero_huawei.tar.gz && rm hero_huawei.tar.gz
    - export HERO_INSTALL="$(pwd)/install"
    ### build base toolchains
    - make tc-pulp
    ### build examples
    - source env/ehuawei.sh
    ### Test both simulators
    - >
      for sim in vsim vcs; do
        # Compile testbench
        cd hardware/$sim
        ./compile.sh
        for d in hello; do
          make -C ../../example-apps/$d clean all
          ../test/gen_slm_files.sh $d
          ./start_sim.sh
        done
        cd -
      done

build_test_rest:
  stage: build_test_rest
  script:
    ### build base toolchains
    - make tc-pulp
    ### build accelerator sdk
    - make sdk-pulp
    ### build examples
    - source env/esim.sh
    # - >
    #   for d in helloworld; do
    #     make -C example-apps/$d all
    #   done
    ### compile testbench
    - cd hardware/vsim
    - ./compile.sh
    - cd -
    ### simulate examples
    - cd hardware/vsim
    - >
      for d in hello; do
        make -C ../../example-apps/$d clean all
        ../test/gen_slm_files.sh $d
        ./start_sim.sh
      done
    - cd -
  artifacts:
    paths:
      - install
      - example-apps
      - pulp
